---
const username = "judas9016";
const token = import.meta.env.GITHUB_TOKEN;

const response = await fetch(
    `https://api.github.com/users/${username}/repos?sort=updated&per_page=100`,
    {
        headers: {
            Accept: "application/vnd.github+json",
            "X-GitHub-Api-Version": "2022-11-28",
            ...(token && { Authorization: `Bearer ${token}` }),
        },
    },
);
interface Repo {
    name: string;
    html_url: string;
    description: string | null;
    language: string | null;
    stargazers_count: number;
    updated_at: string;
    fork: boolean;
    parent?: {
        full_name: string;
    };
}

const repos: Repo[] = await response.json();

function getDaysAgo(dateString: string): string {
    const updated = new Date(dateString);
    const now = new Date();
    const diffTime = Math.abs(now.getTime() - updated.getTime());
    const diffDays = Math.floor(diffTime / (1000 * 60 * 60 * 24));
    return diffDays === 0
        ? "Actualizado hoy"
        : `Actualizado hace ${diffDays} d√≠a${diffDays > 1 ? "s" : ""}`;
}
---

<div class="repo-container">
    {
        repos.map((repo) => (
            <a
                href={repo.html_url}
                class="repo-card"
                target="_blank"
                rel="noopener noreferrer"
            >
                <div class="repo-header">
                    <h2>{repo.name}</h2>
                    {repo.fork && repo.parent && (
                        <span class="fork">
                            Fork de {repo.parent.full_name}
                        </span>
                    )}
                </div>
                <p class="repo-description">
                    {repo.description ?? "Sin descripci√≥n"}
                </p>
                <div class="repo-footer">
                    <span class="lang">{repo.language ?? "No encontrado"}</span>
                    <span>‚≠ê {repo.stargazers_count}</span>
                    <span>üïí {getDaysAgo(repo.updated_at)}</span>
                </div>
            </a>
        ))
    }
</div>

<style>
    .repo-container {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 1.5rem;
        padding: 2rem;
        max-width: auto;
        margin: auto;
        font-family: var(--font-test);
    }

    .repo-card {
        background:
            linear-gradient(rgba(0, 0, 0, 0.8), rgba(0, 0, 0, 0.8)),
            url("https://i.pinimg.com/originals/e0/cf/be/e0cfbe7818f6d5f7d657b17b054175d4.gif")
                no-repeat center center;
        border: 1px solid #333;
        padding: 1.9rem;
        border-radius: 0.75rem;
        transition:
            border 0.3s ease,
            transform 0.2s ease;
        text-decoration: none;
        cursor: pointer;
    }

    .repo-card:hover {
        border-color: #a855f7;
        transform: scale(1.02);
    }

    .repo-header h2 {
        font-size: 1.44rem;
        animation: neonEfectt 1.5s infinite alternate;
        margin: 0;
        color: white;
    }

    .fork {
        font-size: 0.7rem;
        color: #aaa;
        display: block;
        margin-top: 0.3rem;
    }

    .repo-description {
        margin: 1.75rem 0;
        font-size: 1.1rem;
        color: #fff;
    }

    .repo-footer {
        display: flex;
        flex-wrap: wrap;
        gap: 2rem;
        font-size: 1.1rem;
        color: #fff;
    }

    .lang {
        background-color: pink;
        padding: 0.2rem 0.5rem;
        border-radius: 0.4rem;
        color: black;
    }

    @keyframes neonEfectt {
        from {
            text-shadow:
                0 0 3px #d37090,
                0 0 6px #d37090;
        }
        to {
            text-shadow:
                0 0 8px #d37090,
                0 0 16px #d37090;
        }
    }
</style>
